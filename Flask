Why to Use Flask ?
Developing websites using Flask.


What is Web Framework?
Web Application Framework or simply Web Framework represents a collection of libraries and modules that enables a web application developer to write applications without having to bother about low-level details such as protocols, thread management etc.


What is Flask?
Flask is a web application framework written in Python. 
It is developed by Armin Ronacher, who leads an international group of Python enthusiasts named Pocco. 
Flask is based on the Werkzeug WSGI toolkit and Jinja2 template engine. Both are Pocco projects.

WSGI

Web Server Gateway Interface (WSGI) has been adopted as a standard for Python web application development. WSGI is a specification for a universal interface between the web server and the web applications.

Werkzeug :

It is a WSGI toolkit, which implements requests, response objects, and other utility functions. This enables building a web framework on top of it. The Flask framework uses Werkzeug as one of its bases.

Jinga2 :

Jinga2 is a popular templating engine for Python. A web templating system combines a template with a certain data source to render dynamic web pages.

Why Flask is a Micro framework ?
Flask is often referred to as a micro framework. It aims to keep the core of an application simple yet extensible. Flask does not have built-in abstraction layer for database handling, nor does it have form a validation support. Instead, Flask supports the extensions to add such functionality to the application.



virtualenv is a virtual Python environment builder. It helps a user to create multiple Python environments side-by-side. Thereby, it can avoid compatibility issues between the different versions of the libraries.

The following command installs virtualenv

pip install virtualenv

On Ubuntu

Sudo apt-get install virtualenv



Once installed, new virtual environment is created in a folder.

mkdir newproj
cd newproj
virtualenv venv


To activate corresponding environment, on Linux/OS X, use the following −

venv/bin/activate

. venv/bin/activate

(venv) shivamm@http-189:~/Desktop/newproj$ 

We are now ready to install Flask in this environment.

pip install Flask


Variable Rules
build a URL dynamically

@app.route('/hello/<name>')
def hello_name(name):
   return 'Hello %s!' % name

@app.route('/blog/<int:postID>')
def show_blog(postID):
   return 'Blog Number %d' % postID

@app.route('/rev/<float:revNo>')
def revision(revNo):
   return 'Revision Number %f' % revNo


return redirect(url_for('hello_admin')) # hello_admin is the function defined


POST

user = request.form['nm']

GET

User = request.args.get(‘nm’)



    {% ... %} for Statements
    {{ ... }} for Expressions to print to the template output
    {# ... #} for Comments not included in the template output
    # ... ## for Line Statements


    return render_template('hello.html', name = user)
